package com.jayfella.devkit.properties.component;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class BooleanComponent extends ReflectedSdkComponent<Boolean> {

    private JCheckBox checkBox;
    private JPanel contentPanel;

    public BooleanComponent() {
        super(null, null, null);
    }

    public BooleanComponent(Object object, String declaredGetter, String declaredSetter) throws NoSuchMethodException {
        this(object,
                object.getClass().getDeclaredMethod(declaredGetter),
                object.getClass().getDeclaredMethod(declaredSetter, boolean.class));
    }

    public BooleanComponent(Object object, Method getter, Method setter) {
        super(object, getter, setter);


        if (getter != null) {
            try {
                if (getter.getReturnType() == boolean.class) {
                    setValue((boolean) getter.invoke(object));
                } else if (getter.getReturnType() == Boolean.class) {
                    setValue((Boolean) getter.invoke(object));
                }
            } catch (IllegalAccessException | InvocationTargetException e) {
                e.printStackTrace();
            }
        }

    }

    @Override
    public JComponent getJComponent() {
        return contentPanel;
    }

    @Override
    public void setValue(Boolean value) {
        super.setValue(value);

        if (!isBinded()) {

            SwingUtilities.invokeLater(() -> {

                boolean val = value == null ? false : value;
                this.checkBox.setSelected(val);
                bind();
            });
        }

    }

    @Override
    public void bind() {
        super.bind();

        checkBox.addActionListener(e -> {
            JCheckBox checkbox = (JCheckBox) e.getSource();
            Boolean newValue = checkbox.isSelected();
            setValue(newValue);
        });
    }

    @Override
    public void setPropertyName(String propertyName) {
        super.setPropertyName(propertyName);
        checkBox.setText(propertyName);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPanel = new JPanel();
        contentPanel.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        checkBox = new JCheckBox();
        checkBox.setText("Enabled");
        contentPanel.add(checkBox, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JSeparator separator1 = new JSeparator();
        contentPanel.add(separator1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPanel;
    }

}
